#TIBBER
# Configure a default setup of Home Assistant (frontend, api, etc)
default_config:

panel_iframe:
  tasmo:
    title: "Tasmo Admin"
    icon: mdi:power-settings
    url: "http://192.168.10.10:9541"
  z2m:
    title: "Zigbee2MQTT"
    icon: mdi:power-settings
    url: "http://192.168.10.10:8180"
#  nodered:
#    title: "Node Red"
#    icon: mdi:monitor-edit
#    url: "http://192.168.10.10:1880"

zone:
  - name: Home
    latitude: 59.00304578262466
    longitude: 5.608792807976756
    radius: 100

energy:

notify:
- platform: file
  name: scene_notify_snapshot
  filename: /config/scenes/snapshot.yaml
  timestamp: false 

tibber_data:

camera:
  - platform: xiaomi_cloud_map_extractor
    host: !secret xiaomi_vacuum_host
    token: !secret xiaomi_vacuum_token
    username: !secret xiaomi_cloud_username
    password: !secret xiaomi_cloud_password
    draw: ['all']
    attributes:
      - calibration_points


homeassistant:
  packages: !include_dir_named packages

# Text to speech
tts:
  - platform: google_translate

#------------------- INCLUDE----------------------------------|
group: !include groups.yaml
automation: !include automations.yaml
#script: !include scripts.yaml
scene: !include scenes.yaml
#scene saved: !include scenes/snapshot.yaml
#sensor: !include sensors.yaml
light: !include lights.yaml
modbus: !include modbus.yaml

#customize: !include_dir_merge_named customize/
switch: !include_dir_merge_list switches/
script: !include_dir_merge_named scripts/
sensor: !include_dir_merge_list sensors/
#binary_sensor: !include_dir_merge_named binary_sensors/
input_select: !include_dir_merge_named input_select/
input_datetime: !include_dir_merge_named input_datetime/
input_number: !include_dir_merge_named input_number/
input_boolean: !include_dir_merge_named input_boolean/

frontend: 
  themes: !include_dir_merge_named themes
  extra_module_url:
    - /local/card-mod.js

alarm_control_panel:
  - platform: manual_mqtt
    state_topic: home/alarm
    command_topic: home/alarm/set
    name: home_alarm
    code: !secret alarm_code
    code_arm_required: false # Don't need code to arm the alarm
    pending_time: 60
    trigger_time: 1800
    disarm_after_trigger: false
    delay_time: 30
    armed_home:
      pending_time: 0
      delay_time: 0
    armed_away:
      pending_time: 60
      delay_time: 30


# saving data to influxdb
influxdb:
  api_version: 2
  ssl: false
  host: 192.168.10.15
  port: 8086
  token: !secret influxdb_token
  organization: Valen45
  bucket: homeassistant
 # username: !secret influxdb_user
 # password: !secret influxdb_pass
  tags:
    source: HA
  tags_attributes:
    - friendly_name
  default_measurement: units
  exclude:
    entities:
      - zone.home
    domains:
      - persistent_notification
      - person
  include:
    domains:
      - sensor
      - binary_sensor
      - sun
    entities:
      - weather.home

template:
  - sensor:
    - name: Count Aktive Varsler
      state: >
        {{ states.input_boolean | select('search', 'notiflight_') 
        | selectattr('state', 'eq', 'on') | list | count }}
      availability: >
        {{ states.input_boolean | select('search', '.notiflight_') 
        | selectattr('state', 'eq', 'on') | list | count is number }}

  - sensor:
    - name: Count Open DoorWindow
      state: >
        {{ states.binary_sensor | select('search', '_contact') 
        | selectattr('state', 'eq', 'on') | list | count }}
      availability: >
        {{ states.input_boolean | select('search', '._contact') 
        | selectattr('state', 'eq', 'on') | list | count is number }}

  - sensor:
    - name: 'Calculated Light Brightness No Late Dim'
      unit_of_measurement: "Int"
      state: >
        {{ ( [0, (-0.0428 * states('sensor.kitchen_illuminance')|float(0) + 800 )|int(0), 255]|sort )[1] }}

  - sensor:
      - unique_id: washer_remaining_time
        name: 'Remaining Time'
        state: >-
          {% set rem_h = (as_timestamp(states.sensor.washer_completion_time.state) - as_timestamp(now())) | timestamp_custom('%-H', false) %}
          {% set rem_m = (as_timestamp(states.sensor.washer_completion_time.state) - as_timestamp(now())) | timestamp_custom('%-M', false) %}
          {% if int(rem_h) > 0.9 %} {{ rem_h }} hour(s) and {{ rem_m }} minute(s)  {% else %} {{ rem_m }} minute(s) {% endif %}



################################################################################
# Modbus on Elfin EW11 on ventilation
################################################################################
#modbus:
# - name:     VTR300
#    type:     tcp
#    host:     192.168.10.22
#    port:     8432
#    timeout: 3  #Timeout for slave response in seconds (default=3)
#    delay: 3  #Time to sleep in seconds after connecting and before sending messages (defualt=0)

#    climates:
#    - name: vent_VSR300
#      address: 12102
#      slave: 1
#      scale: 0.1
#      offset: 0
#      precision: 1
#      max_temp: 30
#      min_temp: 15
#      temp_step: 1
#      target_temp_register: 2000

